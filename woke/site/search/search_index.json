{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Woke Woke is a static analyzer and symbolic execution engine for Solidity.","title":"Home"},{"location":"#woke","text":"Woke is a static analyzer and symbolic execution engine for Solidity.","title":"Woke"},{"location":"reference/woke/","text":"Module woke Some random file None View Source \"\"\"Some random file\"\"\" def get_pi () -> float : \"\"\"This functions returns a rounded value of pi\"\"\" return 3.1415 Sub-modules woke.a_config woke.b_svm woke.c_regex_parsing woke.d_compile woke.e_ast_parsing woke.l_lsp woke.x_cli Functions get_pi def get_pi ( ) -> float This functions returns a rounded value of pi View Source def get_pi () -> float : \"\"\"This functions returns a rounded value of pi\"\"\" return 3.1415","title":"Index"},{"location":"reference/woke/#module-woke","text":"Some random file None View Source \"\"\"Some random file\"\"\" def get_pi () -> float : \"\"\"This functions returns a rounded value of pi\"\"\" return 3.1415","title":"Module woke"},{"location":"reference/woke/#sub-modules","text":"woke.a_config woke.b_svm woke.c_regex_parsing woke.d_compile woke.e_ast_parsing woke.l_lsp woke.x_cli","title":"Sub-modules"},{"location":"reference/woke/#functions","text":"","title":"Functions"},{"location":"reference/woke/#get_pi","text":"def get_pi ( ) -> float This functions returns a rounded value of pi View Source def get_pi () -> float : \"\"\"This functions returns a rounded value of pi\"\"\" return 3.1415","title":"get_pi"},{"location":"reference/woke/a_config/","text":"Module woke.a_config None None View Source # TODO: Implement woke / config # assignees: michprev","title":"A Config"},{"location":"reference/woke/a_config/#module-wokea_config","text":"None None View Source # TODO: Implement woke / config # assignees: michprev","title":"Module woke.a_config"},{"location":"reference/woke/b_svm/","text":"Module woke.b_svm None None View Source # TODO: Implement woke / svm # assignees: michprev","title":"B Svm"},{"location":"reference/woke/b_svm/#module-wokeb_svm","text":"None None View Source # TODO: Implement woke / svm # assignees: michprev","title":"Module woke.b_svm"},{"location":"reference/woke/c_regex_parsing/","text":"Module woke.c_regex_parsing None None View Source # TODO: Implement woke / regex_parsing # assignees: michprev","title":"C Regex Parsing"},{"location":"reference/woke/c_regex_parsing/#module-wokec_regex_parsing","text":"None None View Source # TODO: Implement woke / regex_parsing # assignees: michprev","title":"Module woke.c_regex_parsing"},{"location":"reference/woke/d_compile/","text":"Module woke.d_compile None None View Source # TODO: Implement woke / compile # assignees: michprev","title":"D Compile"},{"location":"reference/woke/d_compile/#module-woked_compile","text":"None None View Source # TODO: Implement woke / compile # assignees: michprev","title":"Module woke.d_compile"},{"location":"reference/woke/l_lsp/","text":"Module woke.l_lsp None None View Source # TODO: Implement woke / lsp # assignees: bemic","title":"L Lsp"},{"location":"reference/woke/l_lsp/#module-wokel_lsp","text":"None None View Source # TODO: Implement woke / lsp # assignees: bemic","title":"Module woke.l_lsp"},{"location":"reference/woke/x_cli/","text":"Module woke.x_cli None None View Source # TODO: Implement woke / cli # assignees: michprev","title":"X Cli"},{"location":"reference/woke/x_cli/#module-wokex_cli","text":"None None View Source # TODO: Implement woke / cli # assignees: michprev","title":"Module woke.x_cli"},{"location":"reference/woke/e_ast_parsing/","text":"Module woke.e_ast_parsing None None Sub-modules woke.e_ast_parsing.a_abc woke.e_ast_parsing.t_tests","title":"Index"},{"location":"reference/woke/e_ast_parsing/#module-wokee_ast_parsing","text":"None None","title":"Module woke.e_ast_parsing"},{"location":"reference/woke/e_ast_parsing/#sub-modules","text":"woke.e_ast_parsing.a_abc woke.e_ast_parsing.t_tests","title":"Sub-modules"},{"location":"reference/woke/e_ast_parsing/a_abc/","text":"Module woke.e_ast_parsing.a_abc None None View Source from pydantic import BaseModel class AstAbc ( BaseModel ): ... Classes AstAbc class AstAbc ( __pydantic_self__ , ** data : Any ) View Source class AstAbc ( BaseModel ): ... Ancestors (in MRO) pydantic.main.BaseModel pydantic.utils.Representation Class variables Config Static methods construct def construct ( _fields_set : Optional [ ForwardRef ( 'SetStr' )] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values from_orm def from_orm ( obj : Any ) -> 'Model' parse_file def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' parse_obj def parse_obj ( obj : Any ) -> 'Model' parse_raw def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model' schema def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny' schema_json def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode' update_forward_refs def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns. validate def validate ( value : Any ) -> 'Model' Methods copy def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance dict def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude. json def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Optional [ Callable [[ Any ], Any ]] = None , models_as_dict : bool = True , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() .","title":"A Abc"},{"location":"reference/woke/e_ast_parsing/a_abc/#module-wokee_ast_parsinga_abc","text":"None None View Source from pydantic import BaseModel class AstAbc ( BaseModel ): ...","title":"Module woke.e_ast_parsing.a_abc"},{"location":"reference/woke/e_ast_parsing/a_abc/#classes","text":"","title":"Classes"},{"location":"reference/woke/e_ast_parsing/a_abc/#astabc","text":"class AstAbc ( __pydantic_self__ , ** data : Any ) View Source class AstAbc ( BaseModel ): ...","title":"AstAbc"},{"location":"reference/woke/e_ast_parsing/a_abc/#ancestors-in-mro","text":"pydantic.main.BaseModel pydantic.utils.Representation","title":"Ancestors (in MRO)"},{"location":"reference/woke/e_ast_parsing/a_abc/#class-variables","text":"Config","title":"Class variables"},{"location":"reference/woke/e_ast_parsing/a_abc/#static-methods","text":"","title":"Static methods"},{"location":"reference/woke/e_ast_parsing/a_abc/#construct","text":"def construct ( _fields_set : Optional [ ForwardRef ( 'SetStr' )] = None , ** values : Any ) -> 'Model' Creates a new model setting dict and fields_set from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = 'allow' was set since it adds all passed values","title":"construct"},{"location":"reference/woke/e_ast_parsing/a_abc/#from_orm","text":"def from_orm ( obj : Any ) -> 'Model'","title":"from_orm"},{"location":"reference/woke/e_ast_parsing/a_abc/#parse_file","text":"def parse_file ( path : Union [ str , pathlib . Path ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_file"},{"location":"reference/woke/e_ast_parsing/a_abc/#parse_obj","text":"def parse_obj ( obj : Any ) -> 'Model'","title":"parse_obj"},{"location":"reference/woke/e_ast_parsing/a_abc/#parse_raw","text":"def parse_raw ( b : Union [ str , bytes ], * , content_type : 'unicode' = None , encoding : 'unicode' = 'utf8' , proto : pydantic . parse . Protocol = None , allow_pickle : bool = False ) -> 'Model'","title":"parse_raw"},{"location":"reference/woke/e_ast_parsing/a_abc/#schema","text":"def schema ( by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' ) -> 'DictStrAny'","title":"schema"},{"location":"reference/woke/e_ast_parsing/a_abc/#schema_json","text":"def schema_json ( * , by_alias : bool = True , ref_template : 'unicode' = '#/definitions/ {model} ' , ** dumps_kwargs : Any ) -> 'unicode'","title":"schema_json"},{"location":"reference/woke/e_ast_parsing/a_abc/#update_forward_refs","text":"def update_forward_refs ( ** localns : Any ) -> None Try to update ForwardRefs on fields based on this Model, globalns and localns.","title":"update_forward_refs"},{"location":"reference/woke/e_ast_parsing/a_abc/#validate","text":"def validate ( value : Any ) -> 'Model'","title":"validate"},{"location":"reference/woke/e_ast_parsing/a_abc/#methods","text":"","title":"Methods"},{"location":"reference/woke/e_ast_parsing/a_abc/#copy","text":"def copy ( self : 'Model' , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , update : 'DictStrAny' = None , deep : bool = False ) -> 'Model' Duplicate a model, optionally choose which fields to include, exclude and change. Parameters: Name Type Description Default include None fields to include in new model None exclude None fields to exclude from new model, as with values this takes precedence over include None update None values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data None deep None set to True to make a deep copy of the model None Returns: Type Description None new model instance","title":"copy"},{"location":"reference/woke/e_ast_parsing/a_abc/#dict","text":"def dict ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False ) -> 'DictStrAny' Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.","title":"dict"},{"location":"reference/woke/e_ast_parsing/a_abc/#json","text":"def json ( self , * , include : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , exclude : Union [ ForwardRef ( 'AbstractSetIntStr' ), ForwardRef ( 'MappingIntStrAny' )] = None , by_alias : bool = False , skip_defaults : bool = None , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , encoder : Optional [ Callable [[ Any ], Any ]] = None , models_as_dict : bool = True , ** dumps_kwargs : Any ) -> 'unicode' Generate a JSON representation of the model, include and exclude arguments as per dict() . encoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps() .","title":"json"},{"location":"reference/woke/e_ast_parsing/t_tests/","text":"Module woke.e_ast_parsing.t_tests None None","title":"T Tests"},{"location":"reference/woke/e_ast_parsing/t_tests/#module-wokee_ast_parsingt_tests","text":"None None","title":"Module woke.e_ast_parsing.t_tests"}]}