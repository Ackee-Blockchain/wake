[tool.poetry]
name = "woke"
version = "2.1.0"
description = "Woke is a Python-based development and testing framework for Solidity."
license = "ISC"
authors = ["Ackee Blockchain"]
readme = "README.md"
homepage = "https://ackeeblockchain.com"
repository = "https://github.com/Ackee-Blockchain/woke"
documentation = "https://ackeeblockchain.com/woke/docs/latest"
keywords = ["ethereum", "solidity", "security", "testing", "development", "framework", "audit"]

[tool.poetry.dependencies]
python = "^3.7.9"
pydantic = "^1.9.1"
typing-extensions = "^4"
aiohttp = "^3.8"
aiofiles = "^0.8"
tomli = "^2"
networkx = "^2.5"
click = "^8"
rich-click = "^1.6"
rich = "^13"
pathvalidate = "^2.5"
intervaltree = "^3.1"
graphviz = "^0.19"
tblib = "^1.7"
eth-utils = "^2"
eth-abi = "^3"
eth-hash = { version = "^0.3.3", extras = ["pycryptodome"] }
websocket-client = "^1.4"
pywin32 = { version = ">= 302", platform = "win32" }
watchdog = "^2.2"
pytest = "^7"
pdbr = { version = "^0.8.0", extras = ["ipython"] }

pytest-asyncio = { version = "^0.17", optional = true }
GitPython = { version = "^3.1.20", optional = true }

black = { version = "^22", optional = true }
mkdocs-material = { version = "^9", optional = true }
mkdocstrings = { version = "^0.19", extras = ["python"], optional = true }
pymdown-extensions = { version = "^9", optional = true }
pygments = { version = "^2", optional = true }
mike = { version = "^1", optional = true }
isort = { version = "^5", optional = true }

[tool.poetry.extras]
tests = ["pytest-asyncio", "GitPython"]
dev = ["black", "mkdocs-material", "mkdocstrings", "pymdown-extensions", "pygments", "mike", "isort"]

[tool.poetry.scripts]
woke = "woke.cli.__main__:main"
woke-solc = "woke.cli.__main__:woke_solc"

[tool.poetry.urls]
"VS Code Extension" = "https://marketplace.visualstudio.com/items?itemName=AckeeBlockchain.tools-for-solidity"
"Announcement" = "https://ackeeblockchain.com/blog/woke-our-development-and-testing-framework-for-solidity/"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ["py37"]

[tool.pyright]
include = ["**/*.py"]
exclude = ["woke/examples"]
pythonVersion = "3.7"
pythonPlatform = "All"

[tool.isort]
profile = "black"
skip_gitignore = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
markers = [
    "platform_dependent: platform-dependent test that will need to run on all CIs",
    "slow: slow tests that will not run in git hooks",
]
