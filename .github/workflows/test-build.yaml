name: Test Build

on:
  push:
    branches:
      - "feat/version-5.0.0"
  workflow_dispatch:

jobs:
  build_linux_arm64_wheels:
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        abi: [manylinux, musllinux]

    steps:
      - name: Checkout latest
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          submodules: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install cibuildwheel
        run: |
          python3 -m pip install cibuildwheel

      - name: Build wheels
        run: |
          cibuildwheel . --output-dir wheelhouse
        env:
          CIBW_BUILD: "*-${{ matrix.abi }}_*"
          CIBW_SKIP: pp* cp314-* cp314t-*
          CIBW_ARCHS_LINUX: aarch64
          CIBW_ENABLE: cpython-freethreading
          CIBW_BEFORE_ALL_LINUX: |
            yum install -y openssl-devel libatomic || apt install -y pkg-config libssl-dev libatomic1 || apk add --no-cache openssl-dev
            curl -sSf https://sh.rustup.rs | sh -s -- --default-toolchain=stable --profile=minimal -y
          CIBW_ENVIRONMENT_LINUX: "PATH=$HOME/.cargo/bin:$PATH"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ runner.os }}-${{ matrix.abi }}-arm64
          path: ./wheelhouse/*.whl

  build_linux_wheels:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        abi: [manylinux, musllinux]
        arch: [x86_64, i686]
        exclude:
          - abi: musllinux
            arch: i686

    steps:
      - name: Checkout latest
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          submodules: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install cibuildwheel
        run: |
          python3 -m pip install cibuildwheel

      - name: Build wheels
        run: |
          cibuildwheel . --output-dir wheelhouse
        env:
          CIBW_BUILD: "*-${{ matrix.abi }}_*"
          CIBW_SKIP: pp* cp314-* cp314t-*
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_ENABLE: cpython-freethreading
          CIBW_BEFORE_ALL_LINUX: |
            yum install -y openssl-devel libatomic || apt install -y pkg-config libssl-dev libatomic1 || apk add --no-cache openssl-dev
            curl -sSf https://sh.rustup.rs | sh -s -- --default-toolchain=stable --profile=minimal -y
            echo $LD_LIBRARY_PATH
          CIBW_ENVIRONMENT_LINUX: "PATH=$HOME/.cargo/bin:$PATH"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ runner.os }}-${{ matrix.abi }}-${{ matrix.arch }}
          path: ./wheelhouse/*.whl

  build_macos_wheels:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x86_64, arm64]
    steps:
      - name: Checkout latest
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          submodules: true

      - name: Add x86-64 Rust target
        run: |
          rustup target add x86_64-apple-darwin

      - name: Update Rust
        run: |
          rustup update stable && rustup default stable

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install cibuildwheel
        run: |
          python3 -m pip install cibuildwheel

      - name: Build wheels
        run: |
          cibuildwheel . --output-dir wheelhouse
        env:
          CIBW_SKIP: pp* cp314-* cp314t-*
          CIBW_ARCHS_MACOS: ${{ matrix.arch }}
          CIBW_ENABLE: cpython-freethreading
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: |
            if [ "$(uname -m)" = "x86_64" ]; then
                export MACOSX_DEPLOYMENT_TARGET=10.12
            else
                export MACOSX_DEPLOYMENT_TARGET=14.0
            fi
            delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ runner.os }}-${{ matrix.arch }}
          path: ./wheelhouse/*.whl

  build_windows_arm64_wheels:
    runs-on: windows-11-arm
    steps:
      - name: Checkout latest
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          submodules: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install cibuildwheel
        run: |
          python3 -m pip install cibuildwheel

      - name: Build wheels
        run: |
          cibuildwheel . --output-dir wheelhouse
        env:
          CIBW_SKIP: pp* cp314-* cp314t-*
          CIBW_ARCHS_WINDOWS: ARM64
          CIBW_ENABLE: cpython-freethreading
          CIBW_BEFORE_ALL_WINDOWS: |
            curl -sSf https://sh.rustup.rs | sh -s -- --default-toolchain=stable --profile=minimal -y
          CIBW_BEFORE_BUILD_WINDOWS: |
            set PATH="%USERPROFILE%\.cargo\bin;%PATH%" && echo %USERPROFILE%\.cargo\bin
          CIBW_BUILD_VERBOSITY: 3

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ runner.os }}-arm64
          path: ./wheelhouse/*.whl

  build_windows_wheels:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x86, AMD64]
    steps:
      - name: Checkout latest
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          submodules: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install Rust toolchain
        if: matrix.arch == 'x86'
        run: |
          rustup target add i686-pc-windows-msvc
          rustup default stable-i686-pc-windows-msvc

      - name: Install cibuildwheel
        run: |
          python3 -m pip install cibuildwheel

      - name: Build wheels
        run: |
          cibuildwheel . --output-dir wheelhouse
        env:
          CIBW_SKIP: pp* cp314-* cp314t-*
          CIBW_ARCHS_WINDOWS: ${{ matrix.arch }}
          CIBW_ENABLE: cpython-freethreading

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ runner.os }}-${{ matrix.arch }}
          path: ./wheelhouse/*.whl
