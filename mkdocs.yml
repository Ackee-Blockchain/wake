site_name: Woke
site_url: https://ackee-blockchain.github.io/woke
repo_url: https://github.com/Ackee-Blockchain/woke
repo_name: Ackee-Blockchain/woke
edit_uri: edit/main/docs
site_description: Woke is a Python-based development and testing framework for Solidity developed by Ackee Blockchain.
site_author: Ackee Blockchain

theme:
  name: "material"
  language: en
  logo: images/logo.png
  palette:
    - media: "(prefers-color-scheme: light)"
      scheme: default
      toggle:
        icon: material/toggle-switch
        name: Switch to dark mode

    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      toggle:
        icon: material/toggle-switch-off-outline
        name: Switch to light mode

  features:
    - navigation.tracking
    - navigation.sections
    - navigation.indexes
    - navigation.top

nav:
  - Installation: 'index.md'
  - Configuration: 'configuration.md'
  - LSP server: 'language-server.md'
  - Fuzzer: 'fuzzer.md'
  - Solc Version Manager: 'solc-version-manager.md'
  - Contributing: 'contributing.md'
  - API reference:
      - IR model:
          - Base classes: 'api-reference/ir/abc.md'
          - Enums: 'api-reference/ir/enums.md'
          - Expression types: 'api-reference/ir/expression-types.md'
          - Declarations:
              - Contract definition: 'api-reference/ir/declarations/contract-definition.md'
              - Enum definition: 'api-reference/ir/declarations/enum-definition.md'
              - Enum value: 'api-reference/ir/declarations/enum-value.md'
              - Error definition: 'api-reference/ir/declarations/error-definition.md'
              - Event definition: 'api-reference/ir/declarations/event-definition.md'
              - Function definition: 'api-reference/ir/declarations/function-definition.md'
              - Modifier definition: 'api-reference/ir/declarations/modifier-definition.md'
              - Struct definition: 'api-reference/ir/declarations/struct-definition.md'
              - User defined value type definition: 'api-reference/ir/declarations/user-defined-value-type-definition.md'
              - Variable declaration: 'api-reference/ir/declarations/variable-declaration.md'
          - Expressions:
              - Assignment: 'api-reference/ir/expressions/assignment.md'
              - Binary operation: 'api-reference/ir/expressions/binary-operation.md'
              - Conditional: 'api-reference/ir/expressions/conditional.md'
              - Elementary type name expression: 'api-reference/ir/expressions/elementary-type-name-expression.md'
              - Function call: 'api-reference/ir/expressions/function-call.md'
              - Function call options: 'api-reference/ir/expressions/function-call-options.md'
              - Identifier: 'api-reference/ir/expressions/identifier.md'
              - Index access: 'api-reference/ir/expressions/index-access.md'
              - Index range access: 'api-reference/ir/expressions/index-range-access.md'
              - Literal: 'api-reference/ir/expressions/literal.md'
              - Member access: 'api-reference/ir/expressions/member-access.md'
              - New expression: 'api-reference/ir/expressions/new-expression.md'
              - Tuple expression: 'api-reference/ir/expressions/tuple-expression.md'
              - Unary operation: 'api-reference/ir/expressions/unary-operation.md'
          - Meta:
              - Identifier path: 'api-reference/ir/meta/identifier-path.md'
              - Import directive: 'api-reference/ir/meta/import-directive.md'
              - Inheritance specifier: 'api-reference/ir/meta/inheritance-specifier.md'
              - Modifier invocation: 'api-reference/ir/meta/modifier-invocation.md'
              - Override specifier: 'api-reference/ir/meta/override-specifier.md'
              - Parameter list: 'api-reference/ir/meta/parameter-list.md'
              - Pragma directive: 'api-reference/ir/meta/pragma-directive.md'
              - Source unit: 'api-reference/ir/meta/source-unit.md'
              - Structured documentation: 'api-reference/ir/meta/structured-documentation.md'
              - Try catch clause: 'api-reference/ir/meta/try-catch-clause.md'
              - Using for directive: 'api-reference/ir/meta/using-for-directive.md'
          - Statements:
              - Block: 'api-reference/ir/statements/block.md'
              - Break: 'api-reference/ir/statements/break-statement.md'
              - Continue: 'api-reference/ir/statements/continue-statement.md'
              - Do while: 'api-reference/ir/statements/do-while-statement.md'
              - Emit: 'api-reference/ir/statements/emit-statement.md'
              - Expression statement: 'api-reference/ir/statements/expression-statement.md'
              - For: 'api-reference/ir/statements/for-statement.md'
              - If: 'api-reference/ir/statements/if-statement.md'
              - Inline assembly: 'api-reference/ir/statements/inline-assembly.md'
              - Placeholder: 'api-reference/ir/statements/placeholder-statement.md'
              - Return: 'api-reference/ir/statements/return-statement.md'
              - Revert: 'api-reference/ir/statements/revert-statement.md'
              - Try: 'api-reference/ir/statements/try-statement.md'
              - Unchecked block: 'api-reference/ir/statements/unchecked-block.md'
              - Variable declaration statement: 'api-reference/ir/statements/variable-declaration-statement.md'
              - While: 'api-reference/ir/statements/while-statement.md'
          - Type names:
              - Array: 'api-reference/ir/type-names/array-type-name.md'
              - Elementary type: 'api-reference/ir/type-names/elementary-type-name.md'
              - Function type name: 'api-reference/ir/type-names/function-type-name.md'
              - Mapping: 'api-reference/ir/type-names/mapping.md'
              - User defined type name: 'api-reference/ir/type-names/user-defined-type-name.md'
          - Yul:
              - Assignment: 'api-reference/ir/yul/assignment.md'
              - Block: 'api-reference/ir/yul/block.md'
              - Break statement: 'api-reference/ir/yul/break-statement.md'
              - Case statement: 'api-reference/ir/yul/case-statement.md'
              - Continue statement: 'api-reference/ir/yul/continue-statement.md'
              - Expression statement: 'api-reference/ir/yul/expression-statement.md'
              - For loop: 'api-reference/ir/yul/for-loop.md'
              - Function call: 'api-reference/ir/yul/function-call.md'
              - Function definition: 'api-reference/ir/yul/function-definition.md'
              - Identifier: 'api-reference/ir/yul/identifier.md'
              - If statement: 'api-reference/ir/yul/if-statement.md'
              - Leave: 'api-reference/ir/yul/leave.md'
              - Literal: 'api-reference/ir/yul/literal.md'
              - Switch: 'api-reference/ir/yul/switch.md'
              - Typed name: 'api-reference/ir/yul/typed-name.md'
              - Variable declaration: 'api-reference/ir/yul/variable-declaration.md'

extra:
  version:
    provider: mike

plugins:
- search
- mkdocstrings:
    watch:
      - woke
    custom_templates: docs/templates
    handlers:
      python:
        import:
          - https://docs.python.org/3/objects.inv
          - https://networkx.org/documentation/stable/objects.inv
        options:
          show_root_heading: true
- mike

markdown_extensions:
  - def_list
  - admonition
  - toc:
      permalink: "#"
  - pymdownx.details
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - pymdownx.superfences
  - pymdownx.arithmatex:
      generic: true

extra_javascript:
  - js/mathjax.js
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js
